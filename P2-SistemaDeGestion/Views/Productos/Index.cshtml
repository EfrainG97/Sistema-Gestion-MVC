@using P2_SistemaDeGestion.ViewModel
@using System.Linq
@model IEnumerable<ProductoConMarca>

@{
    ViewData["Title"] = "Productos";
}

<div class="d-flex align-items-center justify-content-between mb-3">
    <h1 class="h3 mb-0">Productos</h1>
    <a asp-action="Create" class="btn btn-primary">Crear Nuevo Producto</a>
</div>

<div class="row g-2 mb-3">
    <div class="col-sm-6 col-md-4">
        <div class="input-group">
            <span class="input-group-text">Buscar</span>
            <input id="filterBox" type="search" class="form-control" placeholder="Nombre, descripción o marca">
            <button id="clearFilter" type="button" class="btn btn-outline-secondary">Limpiar</button>
        </div>
    </div>
</div>

<div class="card shadow-sm">
    <div class="card-body p-0">
        <div class="table-responsive">
            <table class="table table-hover table-striped table-sm align-middle mb-0">
                <thead class="table-dark">
                    <tr>
                        <th>Nombre</th>
                        <th>Descripción</th>
                        <th class="text-end">Precio</th>
                        <th class="text-end">Existencia</th>
                        <th>Marca</th>
                        <th style="width: 220px;">Acciones</th>
                    </tr>
                </thead>
                <tbody id="productsBody">
                    @if (Model is null || !Model.Any())
                    {
                        <tr>
                            <td colspan="6" class="text-center py-4 text-muted">
                                No hay productos para mostrar.
                            </td>
                        </tr>
                    }
                    else
                    {
                        foreach (var item in Model)
                        {
                            var stockClass = item.Existencia <= 0 ? "bg-danger" : item.Existencia <= 20 ? "bg-warning text-dark" : "bg-success";
                            var stockText = item.Existencia <= 0 ? "Sin stock" : item.Existencia <= 20 ? "Bajo" : "Alto";
                            <tr class="data-row">
                                <td>@item.Nombre</td>
                                <td class="text-truncate" style="max-width: 360px;" title="@item.Descripcion">@item.Descripcion</td>
                                <td class="text-end fw-semibold">@item.Precio.ToString("C")</td>
                                <td class="text-end">
                                    <div class="d-inline-flex align-items-center gap-2">
                                        <span class="badge rounded-pill @stockClass">@stockText</span>
                                        <span class="text-muted">@item.Existencia</span>
                                    </div>
                                </td>
                                <td>@item.MarcaDescripcion</td>
                                <td class="text-nowrap">
                                    <div class="btn-group btn-group-sm" role="group">
                                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline-secondary">Detalles</a>
                                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-outline-primary">Editar</a>
                                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-outline-danger">Eliminar</a>
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        (function () {
            const input = document.getElementById('filterBox');
            const clear = document.getElementById('clearFilter');

            const rows = () => Array.from(document.querySelectorAll('#productsBody tr.data-row'));
            const normalize = s => (s || '').toLowerCase();

            // Precalcular el texto de búsqueda por fila
            function indexRows() {
                rows().forEach(tr => {
                    if (!tr.dataset.search) {
                        const text = Array.from(tr.querySelectorAll('td'))
                            .map(td => td.textContent || '')
                            .join(' ')
                            .toLowerCase();
                        tr.dataset.search = text;
                    }
                });
            }

            function applyFilter() {
                const q = normalize(input.value.trim());
                rows().forEach(tr => {
                    if (!q) {
                        tr.classList.remove('d-none');
                        return;
                    }
                    tr.classList.toggle('d-none', !tr.dataset.search.includes(q));
                });
            }

            indexRows();
            input?.addEventListener('input', applyFilter);
            clear?.addEventListener('click', () => { input.value = ''; applyFilter(); input.focus(); });
        })();
    </script>
}